# =====================================================
# CI Workflow: Static Code Analysis
# =====================================================
# Description:
# This workflow performs static code analysis, lints, and unit tests
# for Python projects. It supports generating coverage reports optionally.
#
# Triggered via:
#   - workflow_call: Can be invoked by other workflows
#
# Inputs:
#   - coverage_artifact (boolean, required): 
#       If true, generates coverage reports and uploads them as artifacts.
#       If false, runs tests with console-only coverage output.
#
# Jobs:
#   - static-code-analysis:
#       Runs pre-commit checks, installs dependencies, executes unit tests,
#       and optionally uploads coverage reports.
# =====================================================

name: Static Code Analysis
on: 
  workflow_call:
    inputs:
      coverage_artifact:
        required: true
        type: boolean

jobs:
  static-code-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Run Static Code Analysis
        run: uvx pre-commit run --all-files --show-diff-on-failure --color=always

      - name: Install dependencies
        run: |
          uv venv
          uv pip install -r requirements.txt
      
      - name: Run unit tests (with coverage report)
        if: ${{ inputs.coverage_artifact }}
        run: uv run pytest tests/unit --cov=./src --cov-report=xml --cov-report=term

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: ${{ inputs.coverage_artifact }}
        with:
          name: coverage-report
          path:
            coverage.xml
            .coverage
            htmlcov/

      - name: Run unit tests (console-only coverage)
        if: ${{ !inputs.coverage_artifact }}
        run: uv run pytest tests/unit --cov=./src --cov-report=term-missing
      